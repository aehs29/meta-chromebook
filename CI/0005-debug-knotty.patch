From 8d8f96e5fd62091bd867cdc8866f13a1b5273e58 Mon Sep 17 00:00:00 2001
From: Alejandro Enedino Hernandez Samaniego <alhe@linux.microsoft.com>
Date: Thu, 25 Feb 2021 01:03:08 -0700
Subject: [PATCH 1/2] debug knotty

Signed-off-by: Alejandro Enedino Hernandez Samaniego <alhe@linux.microsoft.com>
---
 bitbake/lib/bb/fetch2/__init__.py |  2 +-
 bitbake/lib/bb/fetch2/az.py       |  2 +-
 bitbake/lib/bb/fetch2/wget.py     | 16 ++++++++++------
 bitbake/lib/bb/ui/knotty.py       |  6 +++---
 4 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/bitbake/lib/bb/fetch2/__init__.py b/bitbake/lib/bb/fetch2/__init__.py
index cf0201c490..776e5f33d8 100644
--- a/bitbake/lib/bb/fetch2/__init__.py
+++ b/bitbake/lib/bb/fetch2/__init__.py
@@ -1732,7 +1732,7 @@ class Fetch(object):
                             raise
                         else:
                             logger.warning('Failed to fetch URL %s, attempting MIRRORS if available' % u)
-                            logger.debug(str(e))
+                            logger.warn(str(e))
                         firsterr = e
                         # Remove any incomplete fetch
                         if not verified_stamp:
diff --git a/bitbake/lib/bb/fetch2/az.py b/bitbake/lib/bb/fetch2/az.py
index a3d6ff5045..a565dc607e 100644
--- a/bitbake/lib/bb/fetch2/az.py
+++ b/bitbake/lib/bb/fetch2/az.py
@@ -78,7 +78,7 @@ class Az(Wget):
             # Azure fails on handshake sometimes when using wget, producing a
             # FetchError from the fetcher, retry if thats the case
             if 'Unable to establish SSL connection' in str(e):
-                logger.debug2('Unable to establish SSL connection: Retries remaining: %s, Retrying...' % retries)
+                bb.warn('Unable to establish SSL connection: Retries remaining: %s, Retrying...' % retries)
                 self.download(ud, d, retries-1)
 
         # Sanity check since wget can pretend it succeed when it didn't
diff --git a/bitbake/lib/bb/fetch2/wget.py b/bitbake/lib/bb/fetch2/wget.py
index 6d82f3af07..492c709add 100644
--- a/bitbake/lib/bb/fetch2/wget.py
+++ b/bitbake/lib/bb/fetch2/wget.py
@@ -326,19 +326,23 @@ class Wget(FetchMethod):
                 pass
         except urllib.error.URLError as e:
             if try_again:
-                logger.debug2("checkstatus: trying again")
-                return self.checkstatus(fetch, ud, d, False)
+                if 'exist' not in str(e):
+                    logger.debug2("URLERROR checkstatus: trying again %s" % uri)
+                    return self.checkstatus(fetch, ud, d, False)
+                else:
+                    return False
             else:
-                # debug for now to avoid spamming the logs in e.g. remote sstate searches
-                logger.debug2("checkstatus() urlopen failed: %s" % e)
+                if 'exist' not in str(e):
+                    # debug for now to avoid spamming the logs in e.g. remote sstate searches
+                    logger.debug2("URLERROR checkstatus() urlopen failed: %s:%s" % (e, uri))
                 return False
         except ConnectionResetError as e:
             if try_again:
-                logger.debug2("checkstatus: trying again")
+                logger.debug2(" CONNRESETcheckstatus: trying again %s " % uri)
                 return self.checkstatus(fetch, ud, d, False)
             else:
                 # debug for now to avoid spamming the logs in e.g. remote sstate searches
-                logger.debug2("checkstatus() urlopen failed: %s" % e)
+                logger.debug2("CONNRESET checkstatus() urlopen failed: %s: %s" % (e, uri))
                 return False
         return True
 
diff --git a/bitbake/lib/bb/ui/knotty.py b/bitbake/lib/bb/ui/knotty.py
index 0efa614dfc..61db27f9b7 100644
--- a/bitbake/lib/bb/ui/knotty.py
+++ b/bitbake/lib/bb/ui/knotty.py
@@ -326,8 +326,8 @@ def print_event_log(event, includelogs, loglines, termfilter):
     if logfile and os.path.exists(logfile):
         termfilter.clearFooter()
         bb.error("Logfile of failure stored in: %s" % logfile)
-        if includelogs and not event.errprinted:
-            print("Log data follows:")
+        if True and not False:
+            bb.warn("Log data follows:")
             f = open(logfile, "r")
             lines = []
             while True:
@@ -344,7 +344,7 @@ def print_event_log(event, includelogs, loglines, termfilter):
             f.close()
             if lines:
                 for line in lines:
-                    print(line)
+                    bb.warn(line)
 
 def _log_settings_from_server(server, observe_only):
     # Get values of variables which control our output
-- 
2.25.1

