parameters:
    pool: ''
    machine: ''
    buildtype: ''

jobs:
- job: Sstate_${{ parameters.machine }}
  pool: ${{ parameters.pool }}
  timeoutInMinutes: 0

  steps:
  - checkout: none


  - bash: |
      if [ $(Build.SourceBranchName) == "zeus" ]; then
        echo "##vso[task.setvariable variable=buildbranch;]refs/heads/zeus"
      else
        echo "##vso[task.setvariable variable=buildbranch;]refs/heads/master"
      fi
      if [ ${{ parameters.machine }} == "eve" ]; then
        echo "##vso[task.setvariable variable=machinesstate;]Sstate_eve"
      fi
      if [ ${{ parameters.machine }} == "x86" ]; then      
        echo "##vso[task.setvariable variable=machinesstate;]Sstate_x86"
      fi
      if [ ${{ parameters.machine }} == "mediatek8173" ]; then
        echo "##vso[task.setvariable variable=machinesstate;]Sstate_mediatek8173"
      fi
    displayName: 'Configure build'

  - bash: |
      sudo mkdir $(SSTATE_DIR)
      sudo mkdir $(DEPLOY_ARTIFACTS_DIR)
      sudo chown vsts:vsts $(SSTATE_DIR)
      sudo chown vsts:vsts ${DEPLOY_ARTIFACTS_DIR}
    displayName: 'Set up container directories'

  - ${{ if eq(parameters.machine, 'eve') }}:
    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_EVE_YOCTO)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifact: 'SState'
        targetPath: $(SSTATE_DIR)

    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_EVE_INTEL)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifactName: 'SState'
        targetPath: $(SSTATE_DIR)

    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_EVE_CHROMIUM)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifactName: 'SState'
        targetPath: $(SSTATE_DIR)

  - ${{ if eq(parameters.machine, 'x86') }}:
    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_X86_YOCTO)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifact: 'SState'
        targetPath: $(SSTATE_DIR)

    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_X86_INTEL)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifactName: 'SState'
        targetPath: $(SSTATE_DIR)

    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_X86_CHROMIUM)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifactName: 'SState'
        targetPath: $(SSTATE_DIR)

  - ${{ if eq(parameters.machine, 'mediatek8173') }}:
    - task: DownloadPipelineArtifact@2
      condition: always()
      inputs:
        source: 'specific'
        project: $(System.TeamProjectId)
        pipeline: $(PIPELINE_MEDIATEK_CHROMIUM)
        runVersion: 'latestFromBranch'
        runBranch: $(BUILDBRANCH)
        artifact: 'SState'
        targetPath: $(SSTATE_DIR)

  - publish: $(SSTATE_DIR)
    artifact: $(MACHINESSTATE)
    condition: always()
