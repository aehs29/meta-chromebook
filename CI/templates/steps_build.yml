parameters:
  build_branch: 'master'
  machine: ''
  kernel: ''
  buildtype: ''

steps:
- ${{ if eq(parameters.buildtype, 'chromebook') }}:
  - bash: |
      echo "Building minimal chromebook image for ${MACHINE} with kernel ${KERNEL}"
      cd ~/poky
      source oe-init-build-env
      echo "MACHINE = \"${MACHINE}\"" >> ./conf/local.conf
      echo "PREFERRED_PROVIDER_virtual/kernel = \"${KERNEL}\"" >> ./conf/local.conf
      echo "${EXTRA_LOCALCONF}" >> ./conf/local.conf
      echo "Building with the following configuration:"
      tail -n 10 conf/local.conf
      bitbake chromebook-image-minimal
    condition: succeededOrFailed()
    displayName: 'Build minimal chromebook image for $(MACHINE) - $(KERNEL)'

- ${{ if eq(parameters.buildtype, 'poky') }}:
  - bash: |
      echo "Building minimal image"
      cd ~/poky
      source oe-init-build-env
      echo "MACHINE = \"${MACHINE}\"" >> ./conf/local.conf
      echo "PREFERRED_PROVIDER_virtual/kernel = \"${KERNEL}\"" >> ./conf/local.conf
      echo "Building with the following configuration:"
      tail -n 10 conf/local.conf
      bitbake core-image-minimal
    condition: succeededOrFailed()
    displayName: 'Build minimal image for $(MACHINE) - $(KERNEL)'

- ${{ if eq(parameters.buildtype, 'native') }}:
  - bash: |
      echo "Building minimal chromebook image for ${MACHINE} with kernel ${KERNEL}"
      cd ~/poky
      source oe-init-build-env
      echo "MACHINE = \"${MACHINE}\"" >> ./conf/local.conf
      echo "PREFERRED_PROVIDER_virtual/kernel = \"${KERNEL}\"" >> ./conf/local.conf
      echo "${EXTRA_LOCALCONF}" >> ./conf/local.conf
      echo "Building with the following configuration:"
      tail -n 10 conf/local.conf
      bitbake chromebook-image-minimal -g
      grep native pn-buildlist > nativerec
      bitbake $(tr '\n' ' ' < nativerec)
    condition: succeededOrFailed()
    displayName: 'Build native dependencies for chromebook image for $(MACHINE) - $(KERNEL)'

- bash: |
    df -h
  condition: succeededOrFailed()
  displayName: 'Check space after build'

- ${{ if eq(parameters.buildtype, 'chromebook') }}:
  - bash: |
      echo "Moving artifacts to be deployed"
      rm -rf ${DEPLOY_ARTIFACTS_DIR}/*
      # Kernel
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/bzImage--*.bin ${DEPLOY_ARTIFACTS_DIR}
      # QEMUboot
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/chromebook-image-*-${MACHINE}-*.qemuboot.conf ${DEPLOY_ARTIFACTS_DIR}
      # WIC
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/chromebook-image-*-${MACHINE}-*.rootfs.wic ${DEPLOY_ARTIFACTS_DIR}
      # Modules
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/modules--*.tgz ${DEPLOY_ARTIFACTS_DIR}
    condition: succeededOrFailed()
    displayName: 'Moving Artifacts - $(MACHINE) - $(KERNEL)'

- ${{ if eq(parameters.buildtype, 'poky') }}:
  - bash: |
      echo "Moving artifacts to be deployed"
      rm -rf ${DEPLOY_ARTIFACTS_DIR}/*
      # Kernel
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/bzImage--*.bin ${DEPLOY_ARTIFACTS_DIR}
      # QEMUboot
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/core-image-*-${MACHINE}-*.qemuboot.conf ${DEPLOY_ARTIFACTS_DIR}
      # WIC
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/core-image-*-${MACHINE}-*.rootfs.wic ${DEPLOY_ARTIFACTS_DIR}
      # Modules
      mv /home/vsts/poky/build/tmp/deploy/images/${MACHINE}/modules--*.tgz ${DEPLOY_ARTIFACTS_DIR}
    condition: succeededOrFailed()
    displayName: 'Moving Artifacts - $(MACHINE) - $(KERNEL)'

- ${{ if ne(parameters.buildtype, 'native') }}:
    - publish: $(DEPLOY_ARTIFACTS_DIR)
      artifact: $(MACHINE)-$(KERNEL)
      condition: succeededOrFailed()

- publish: $(SSTATE_DIR)
  artifact: 'SState'
  condition: succeededOrFailed()
