parameters:
  build_branch: 'master'
  machine: ''
  kernel: ''
  buildtype: ''

steps:
- ${{ if eq(parameters.buildtype, 'chromebook') }}:
  - bash: |
      echo "Building minimal chromebook image for ${MACHINE} with kernel ${KERNEL}"
      cd ~/poky
      git config --global user.email "you@example.com"
      git config --global user.name "Your Name"
      git am $(Build.SourcesDirectory)/CI/*.patch
      echo "git am $(Build.SourcesDirectory)/CI/0001*.patch"
      ls -l $(Build.SourcesDirectory)/CI/0001*.patch
      git show
      source oe-init-build-env
      export $PATH:$(DL_DIR)/azcopy_bin/
      echo "MACHINE = \"${MACHINE}\"" >> ./conf/local.conf
      echo "PREFERRED_PROVIDER_virtual/kernel = \"${KERNEL}\"" >> ./conf/local.conf
      echo "${EXTRA_LOCALCONF}" >> ./conf/local.conf
      echo "Building with the following configuration:"
      tail -n 10 conf/local.conf
      if [ -z $(BBTARGET) ]; then
        bitbake chromebook-image-minimal
      else
        bitbake $(BBTARGET)
      fi
    condition: succeededOrFailed()
    displayName: 'Build minimal chromebook image for $(MACHINE) - $(KERNEL)'

- ${{ if eq(parameters.buildtype, 'poky') }}:
  - bash: |
      echo "Building minimal image"
      export PATH=$PATH:$(DL_DIR)
      cd ~/poky
      source oe-init-build-env
      echo "MACHINE = \"${MACHINE}\"" >> ./conf/local.conf
      echo "PREFERRED_PROVIDER_virtual/kernel = \"${KERNEL}\"" >> ./conf/local.conf
      echo "Building with the following configuration:"
      tail -n 10 conf/local.conf
      bitbake core-image-minimal
    condition: succeededOrFailed()
    displayName: 'Build minimal image for $(MACHINE) - $(KERNEL)'

- bash: |
    df -h
  condition: succeededOrFailed()
  displayName: 'Check space after build'

- bash: |
    export AZCOPY_VERSION="10"
    wget -O azcopy_v$AZCOPY_VERSION.tar.gz https://aka.ms/downloadazcopy-v$AZCOPY_VERSION-linux && tar -xf azcopy_v$AZCOPY_VERSION.tar.gz  --strip-components=1
    ./azcopy sync $(SSTATE_DIR) --recursive "https://ypsstate.blob.core.windows.net/sstate-cache$(SAS_TOKEN)"
    ./azcopy sync $(DL_DIR) --recursive "https://ypsstate.blob.core.windows.net/downloads$(SAS_TOKEN)"
  condition: succeededOrFailed()