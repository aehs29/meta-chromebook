#@TYPE: Machine
#@NAME: arm64-chromebook

#@DESCRIPTION: Machine configuration for 64 arm processors
# most arm chromebooks come with a cortex-a53 or cortex-a72 for example.
# This MACHINE should work on most of them

DEFAULTTUNE ?= "generic-armv8"

require conf/machine/include/arm/arch-armv8a.inc

TUNEVALID[generic-armv8] = "Enable arm v8 optimizations"

AVAILTUNES += "generic-armv8"

ARMPKGARCH_tune-generic-armv8             = "generic-armv8"

TUNE_FEATURES_tune-generic-armv8          = "${TUNE_FEATURES_tune-aarch64} generic-armv8"
PACKAGE_EXTRA_ARCHS_tune-generic-armv8    = "${PACKAGE_EXTRA_ARCHS_tune-aarch64}"


IMAGE_FSTYPES += "wic"

# It is yet to be tested what works best for arm Chromebooks
WKS_FILE="directdisk-gpt.wks"

# Since this MACHINE should work on most arm64 chromebooks, we have to rely on kernel-modules being installed.
MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS_append = " kernel-modules linux-firmware"


# Not a huge fan of setting this on a MACHINE.conf, but apparently this is the
# way its wired in, setting it on an image recipe wouldn't work, and otherwise
# it would have to be set on several bbappends.
# This allows us to run Xorg as a non root user
ROOTLESS_X = "1"


PREFERRED_PROVIDER_virtual/kernel = "linux-yocto"
PREFERRED_VERSION_linux-yocto = "5.%"

KERNEL_IMAGETYPE_arm64-chromebook = "Image"